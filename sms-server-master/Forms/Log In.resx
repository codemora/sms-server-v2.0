<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        uwAAAbsBOuzj4gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAJRSURBVHhe7dkx
        SgNBGAXgLcRCxN4mIa2VYOMNRLCLVSoPIHgDLUSw9AKCYGNjF8RGPICtlmIhiBZWggoW8T2ZhX8nb83G
        cp8DH+y+zPy7/2h0jcVoNLImQycydCJDJzJ0IkMnMnQiQycydCJDJzJ0IkMnMnQiQycydCJDJzJ0IkMn
        1ZOiWIIdOIXLlmFP7G2p0nNqfBYO4AsYtBl7ZK+zcQOOIU5ycJx6L9ZS4Ii9F2choFvYgtWWYU/sLfbK
        3ov7ENAyvzXaiL2FPom9V4IXtbBN2GPo9yeIJ89qUYSxAofBhpo3CcZ+qLGv5kyCsRFq0IqaF2E8Aw9K
        lZMmG8D3UlxzpOZNgvEZanyqOZNgHIUatKXmRRjTbwDGAE5gEcY2AOaBX4FdtZ7SnGtYT+djG4CxDpwz
        H9dGGLvAa7He2AYA75H3OqhZP90GYMzBY3r9Da7ScekGntLxB/TyGqkOHz7KNRcQH7p4zKw8P6ip0QNe
        gye8Jq9driHeG++Rx7znOVFj6g3YC683cS5qdKG88SY4tyvqnKfXm9oTNabegGF4vYk7WMhqbMI75HPr
        cO5mVmMBWDuf+5thrJHq/OlnQB8e0pw6r7ANMzU1OpA/dCmc06mpMQO8Bq+Vr4t4r/2aGv8bkOaUKif/
        bwGxwP6HoPevwbTI90Eoh+H3KBxhtPqPIcs/h+0/EMkfTuw+EvP+UDR9a/h+LJ42wPsfIyUMz3+NOZOh
        Exk6kaETGTqRoRMZOpGhExk6kaETGTqRoRMZOpGhExk6kaETGTqRoY9R8Q1gBZcwLzVeTgAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        RAAAAUQBTQy1XAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAH8SURBVFhHtda/
        L0NRFAfwQ0IMgqZJEwlzaxGDmrpK7E1DWGz0b2AxsTA2YrdYjCYDCZN/gcQkJCKh8WtQ31O3cd+5374+
        9XqST/Let/d+T2LQSqPR+BNMEbbhBO4cfdasyO7EoWE7mFX4AH1h9LNVdrcdGjKYiluSRIV1MDRkMKfe
        gk5OWQdDQwszCV+uPAk9O8m6LBpamHlX/BfzrMuioYVZ9IqTWmRdFg0tTNUrTqrKuiwaWpiyV5xUmXVZ
        NLQwU15xUlOsy6KhhRmAuH9Alp4dYF0WDRlMzZUnUWMdDA0ZTA6e3YI4eibHOhgatoNZgU7fBSvsbjs0
        jIMpwT34i5VmJXYnDg07wQzDAuw4+jzMznZCQwvTD3OwCQeQIWcy7rMNmIU+e4ahYQtmBo7gETRo+YQL
        0B8hSp818888wCFMs+4WGiqM/vt9B7+0G2+wxnYoHorsustp2qO7gkBkFF7dpTTpX2Is2BcE3X3zJbUe
        7AsCkTPvQtrOg31BIHLjXUjbbbAvCERevAtpqwf7Ii8iQ97hXhmM7Iy8iEx4B3tlPLIz8iKS9w72Sj6y
        M/IikoUnd7AXtDsb2em/NAORAlyBfzEN2lkI9tmgGf78BlyCY/jP94He1Q7tor8Rg8DCjMAybME+aOEl
        XEPd0WfN9DM9o2f1zgjr/NWQb1y1eI9eMJF1AAAAAElFTkSuQmCC
</value>
  </data>
</root>